//variant<tuple<lit, int>, tuple<lit, lit>>giveVariant2(int in)
(str, int | str, str)giveVariant2(int in)
{
    if (in == 1) return "ok", 10
    if (in == 2) return "ok", 88
    else         return "error", "unexpected_int"
}

(int | str)giveVariant3(int in)
{
    if (in == 1) return "ok"
    if (in == 2) return 88
    else         return "error"
}

(int | str, int)giveVariant4(int in)
{
    if (in == 1) return "ok", 10
    if (in == 2) return "ok", 88
    else         return 0
}

(int)main()
{
    // (str, int | str, str)giveVariant2(1)


    // variant<tuple<string,int>, tuple<string, string>> myVari = make_tuple("test", 66);
    (str, int | str, str) myVari = giveVariant2(1)


    match (testing123)
    {
        (lit ok, int variInt) => println("ok: " + variInt)
        (lit error, lit msg)  => println("error: " + msg)
    }

    return 0
}